{"version":3,"sources":["services/auth-header.js","services/auth.service.js","components/Login.js","components/Register.js","components/Home.js","components/Profile.js","services/user.service.js","components/Experiments.js","components/RandomNumberGenerator/config.js","components/RandomNumberGenerator/index.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["authHeader","user","JSON","parse","localStorage","getItem","authToken","Authorization","API_URL","authService","register","email","password","axios","post","login","then","response","data","setItem","stringify","logout","removeItem","undefined","headers","getCurrentUser","required","value","className","role","Login","props","setCurrentUser","form","useRef","checkBtn","useState","setEmail","setPassword","loading","setLoading","message","setMessage","loggedIn","setLoggedIn","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","error","resMessage","toString","ref","htmlFor","type","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","validPassword","Register","successful","setSuccessful","Home","Profile","currentUser","AuthService","substring","substr","id","userService","getUserData","get","getUserExperiments","getUserExperimentResults","experimentId","addBruteforceTask","list","r","repetitions","addKKTask","Experiments","experiments","checkedDict","setCheckedDict","handleSelectAll","handleDeselectAll","loadedResults","setLoadedResults","Button","onClick","Accordion","map","experiment","i","Card","Header","Form","Check","checked","Toggle","as","variant","eventKey","setValues","Collapse","height","dataLength","Body","computationTimes","avgComputationTime","experimentID","UserService","results","minDistance","bestPartitions","partition","DISTRIBUTIONS","PARAMETERS_CONFIG","PARAMETERS","DESCRIPTION","GENERATOR","d3","RandomNumberGenerator","valuesRef","roundValues","setRoundValues","distribution","setDistribution","lenghtRef","parameterRef","Group","Label","Control","placeholder","event","Object","entries","key","Text","parameter","el","label","Number","parameters","console","log","randomGenerator","array","random","randomRounded","Math","round","push","input","reduce","curr","next","BoardUser","setExperiments","checkedExperimentsDict","setCheckedExperimentsDict","selectedResult","setSelectedResult","rRef","repetitionsRef","algoRef","chartContainerRef","refreshExperiments","catch","handleSelectAllExperiments","algo","newCheckedDict","filter","acc","handleDeselectAllExperiments","useEffect","newExperimentsCheckedDict","forEach","hasOwnProperty","selectAll","remove","findResult","find","result","computationTime","margin","width","svg","append","attr","text","sumstat","nest","d","sortValues","a","b","x","domain","max","range","call","y","res","color","enter","values","on","each","g","boxplotGroup","sortedComputationTimes","sort","q1","median","q3","IQR","min","boxplotHeight","dd","stopPropagation","split","controlId","custom","Alert","Container","fluid","Spinner","animation","size","aria-hidden","Row","Col","App","username","href","exact","path","component","render","Board","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8f580b1.chunk.js","sourcesContent":["export const authHeader = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.authToken) {\r\n    return { Authorization: `Bearer ${user.authToken}` };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { authHeader } from \"./auth-header\";\r\n\r\nconst API_URL = \"https://partition-problem.herokuapp.com/auth\";\r\n// const API_URL = \"http://localhost:5000/auth\";\r\n\r\nconst register = (email, password) => {\r\n  return axios.post(`${API_URL}/register`, {\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(`${API_URL}/login`, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.authToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  axios.post(`${API_URL}/logout`, undefined, {\r\n    headers: {\r\n      ...authHeader(),\r\n    },\r\n  });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport const authService = { register, login, logout, getCurrentUser };\r\n\r\nexport default authService;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { authService } from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const { setCurrentUser } = props;\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      authService.login(email, password).then(\r\n        () => {\r\n          // props.history.push(\"/profile\");\r\n          // window.location.reload();\r\n          const user = authService.getCurrentUser();\r\n          setCurrentUser(user);\r\n          setLoggedIn(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.response.data.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loggedIn && <Redirect to=\"/profile\" />}\r\n      <div className=\"col-md-4 offset-md-4\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form onSubmit={handleLogin} ref={form}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Email</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { authService } from \"../services/auth.service\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validEmail = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst validPassword = (value) => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Register = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [successful, setSuccessful] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setSuccessful(false);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      authService.register(email, password).then(\r\n        (response) => {\r\n          setMessage(response.data.message);\r\n          setSuccessful(true);\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.response.data.message ||\r\n            error.toString();\r\n\r\n          setMessage(resMessage);\r\n          setSuccessful(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleRegister} ref={form}>\r\n          {!successful && (\r\n            <div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={onChangeEmail}\r\n                  validations={[required, validEmail]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={onChangePassword}\r\n                  validations={[required, validPassword]}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div\r\n                className={\r\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                }\r\n                role=\"alert\"\r\n              >\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <div>Home!</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst Profile = () => {\r\n  const currentUser = AuthService.getCurrentUser();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>\r\n          <strong>{currentUser.email}</strong> Profile\r\n        </h3>\r\n      </header>\r\n      <p>\r\n        <strong>Token:</strong> {currentUser.authToken.substring(0, 20)} ...{\" \"}\r\n        {currentUser.authToken.substr(currentUser.authToken.length - 20)}\r\n      </p>\r\n      <p>\r\n        <strong>Id:</strong> {currentUser.id}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {currentUser.email}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport { authHeader } from \"./auth-header\";\r\n\r\nconst API_URL = \"https://partition-problem.herokuapp.com\";\r\n// const API_URL = \"http://localhost:5000\";\r\n\r\nconst getUserData = () => {\r\n  return axios.get(`${API_URL}/results/`, { headers: authHeader() });\r\n};\r\n\r\nconst getUserExperiments = () => {\r\n  return axios.get(`${API_URL}/experiments/`, { headers: authHeader() });\r\n};\r\n\r\nconst getUserExperimentResults = (experimentId) => {\r\n  return axios.get(`${API_URL}/experiments/${experimentId}`, {\r\n    headers: authHeader(),\r\n  });\r\n};\r\n\r\nconst addBruteforceTask = (list, r, repetitions) => {\r\n  return axios.post(\r\n    `${API_URL}/bruteforce`,\r\n    { list, r, repetitions },\r\n    { headers: authHeader() }\r\n  );\r\n};\r\n\r\nconst addKKTask = (list, r, repetitions) => {\r\n  return axios.post(\r\n    `${API_URL}/kk`,\r\n    { list, r, repetitions },\r\n    { headers: authHeader() }\r\n  );\r\n};\r\n\r\nexport const userService = {\r\n  getUserData,\r\n  getUserExperiments,\r\n  getUserExperimentResults,\r\n  addBruteforceTask,\r\n  addKKTask,\r\n};\r\n\r\nexport default userService;\r\n","import React, { useState } from \"react\";\r\nimport { Accordion, Card, Form, Button, ListGroup } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport const Experiments = (props) => {\r\n  const {\r\n    experiments,\r\n    checkedDict,\r\n    setCheckedDict,\r\n    handleSelectAll,\r\n    handleDeselectAll,\r\n  } = props;\r\n\r\n  const [loadedResults, setLoadedResults] = useState({});\r\n\r\n  const loadResultsForExperiment = (experimentID) => {\r\n    UserService.getUserExperimentResults(experimentID).then((response) => {\r\n      setLoadedResults({\r\n        ...loadedResults,\r\n        [experimentID]: response.data.results,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"mr-2 mb-2\" onClick={handleSelectAll}>\r\n        Select All\r\n      </Button>\r\n      <Button className=\"mr-2 mb-2\" onClick={handleDeselectAll}>\r\n        Deselect All\r\n      </Button>\r\n      <Accordion>\r\n        {experiments.map((experiment, i) => (\r\n          <Card key={experiment.id}>\r\n            <Card.Header className=\"d-flex align-items-center\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id={experiment.id}\r\n                onChange={(e) => {\r\n                  setCheckedDict({\r\n                    ...checkedDict,\r\n                    [experiment.id]: !checkedDict[experiment.id],\r\n                  });\r\n                }}\r\n                checked={checkedDict[experiment.id]}\r\n              />\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"link\"\r\n                eventKey={experiment.id}\r\n              >\r\n                Values: {JSON.stringify(experiment.setValues)}, R:{\" \"}\r\n                {experiment.r}\r\n              </Accordion.Toggle>\r\n            </Card.Header>\r\n            <Accordion.Collapse eventKey={experiment.id}>\r\n              <InfiniteScroll height={300} dataLength={1}>\r\n                <Card.Body>\r\n                  ExperimentID: {experiment.id}\r\n                  <br />\r\n                  Number of trials: {experiment.repetitions}\r\n                  <br />\r\n                  Number of finished trials:{\" \"}\r\n                  {experiment.computationTimes.length}\r\n                  <br />\r\n                  Input length: {experiment.setValues.length}\r\n                  <br />\r\n                  R: {experiment.r}\r\n                  <br />\r\n                  Avg. computation time: {experiment.avgComputationTime}s\r\n                  <br />\r\n                  <Button\r\n                    onClick={() => loadResultsForExperiment(experiment.id)}\r\n                  >\r\n                    Load results\r\n                  </Button>\r\n                  <br />\r\n                  {loadedResults[experiment.id] && (\r\n                    <>\r\n                      <p>\r\n                        Distance: {loadedResults[experiment.id].minDistance}\r\n                      </p>\r\n                      <ol>\r\n                        {loadedResults[experiment.id].bestPartitions.map(\r\n                          (partition, i) => (\r\n                            <li key={i}>{JSON.stringify(partition)}</li>\r\n                          )\r\n                        )}\r\n                      </ol>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </InfiniteScroll>\r\n            </Accordion.Collapse>\r\n          </Card>\r\n        ))}\r\n      </Accordion>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Experiments;\r\n","import * as d3 from \"d3\";\r\nimport \"d3-random\";\r\n\r\nexport const DISTRIBUTIONS = {\r\n  UNIFORM: \"Uniform\",\r\n  GAUSSIAN: \"Gaussian\",\r\n  LOG_NORMAL: \"Log-normal\",\r\n  BATES: \"Bates\",\r\n  IRWIN_HALL: \"Irwin-Hall\",\r\n  EXPONENTIAL: \"Exponential\",\r\n  PARETO: \"Pareto\",\r\n  BERNOULLI: \"Bernoulli\",\r\n  GEOMETRIC: \"Geometric\",\r\n  BINOMIAL: \"Binomial\",\r\n  GAMMA: \"Gamma\",\r\n  BETA: \"Beta\",\r\n  WEIBULL: \"Weibull\",\r\n  CAUCHY: \"Cauchy\",\r\n  LOGISTIC: \"Logistic\",\r\n  POISSON: \"Poisson\",\r\n};\r\n\r\nexport const PARAMETERS_CONFIG = {\r\n  [DISTRIBUTIONS.UNIFORM]: {\r\n    PARAMETERS: [\"min\", \"max\"],\r\n    DESCRIPTION:\r\n      \"The minimum allowed value of a returned number is min (inclusive), and the maximum is max (exclusive).\",\r\n    GENERATOR: d3.randomUniform,\r\n  },\r\n  [DISTRIBUTIONS.GAUSSIAN]: {\r\n    PARAMETERS: [\"mu\", \"sigma\"],\r\n    DESCRIPTION:\r\n      \"The expected value of the generated numbers is mu, with the given standard deviation sigma.\",\r\n    GENERATOR: d3.randomNormal,\r\n  },\r\n  [DISTRIBUTIONS.LOG_NORMAL]: {\r\n    PARAMETERS: [\"mu\", \"sigma\"],\r\n    DESCRIPTION:\r\n      \"The expected value of the random variable’s natural logarithm is mu, with the given standard deviation sigma.\",\r\n    GENERATOR: d3.randomLogNormal,\r\n  },\r\n  [DISTRIBUTIONS.BATES]: {\r\n    PARAMETERS: [\"n\"],\r\n    DESCRIPTION: \"Bates distribution with n independent variables.\",\r\n    GENERATOR: d3.randomBates,\r\n  },\r\n  [DISTRIBUTIONS.IRWIN_HALL]: {\r\n    PARAMETERS: [\"n\"],\r\n    DESCRIPTION: \"Irwin–Hall distribution with n independent variables.\",\r\n    GENERATOR: d3.randomIrwinHall,\r\n  },\r\n  [DISTRIBUTIONS.EXPONENTIAL]: {\r\n    PARAMETERS: [\"lambda\"],\r\n    DESCRIPTION:\r\n      \"Exponential distribution with the rate lambda; equivalent to time between events in a Poisson process with a mean of 1 / lambda. For example, exponential(1/40) generates random times between events where, on average, one event occurs every 40 units of time.\",\r\n    GENERATOR: d3.randomExponential,\r\n  },\r\n  [DISTRIBUTIONS.PARETO]: {\r\n    PARAMETERS: [\"alpha\"],\r\n    DESCRIPTION:\r\n      \"Pareto distribution with the shape alpha. The value alpha must be a positive value.\",\r\n    GENERATOR: d3.randomPareto,\r\n  },\r\n  [DISTRIBUTIONS.BERNOULLI]: {\r\n    PARAMETERS: [\"p\"],\r\n    DESCRIPTION:\r\n      \"Bernoulli distribution with 1 being returned with success probability p and 0 with failure probability q = 1 - p. The value p is in the range [0, 1].\",\r\n    GENERATOR: d3.randomBernoulli,\r\n  },\r\n  [DISTRIBUTIONS.GEOMETRIC]: {\r\n    PARAMETERS: [\"p\"],\r\n    DESCRIPTION:\r\n      \"Geometric distribution with success probability p. The value p is in the range [0, 1].\",\r\n    GENERATOR: d3.randomGeometric,\r\n  },\r\n  [DISTRIBUTIONS.BINOMIAL]: {\r\n    PARAMETERS: [\"n\", \"p\"],\r\n    DESCRIPTION:\r\n      \"Binomial distribution with n the number of trials and p the probability of success in each trial. The value n is greater or equal to 0, and the value p is in the range [0, 1].\",\r\n    GENERATOR: d3.randomBinomial,\r\n  },\r\n  [DISTRIBUTIONS.GAMMA]: {\r\n    PARAMETERS: [\"k\", \"theta\"],\r\n    DESCRIPTION:\r\n      \"Gamma distribution with k the shape parameter and theta the scale parameter. The value k must be a positive value.\",\r\n    GENERATOR: d3.randomGamma,\r\n  },\r\n  [DISTRIBUTIONS.BETA]: {\r\n    PARAMETERS: [\"alpha\", \"beta\"],\r\n    DESCRIPTION:\r\n      \"Beta distribution with alpha and beta shape parameters, which must both be positive.\",\r\n    GENERATOR: d3.randomBeta,\r\n  },\r\n  [DISTRIBUTIONS.WEIBULL]: {\r\n    PARAMETERS: [\"k\", \"a\", \"b\"],\r\n    DESCRIPTION: ` generalized extreme value distributions, depending on k:\r\n\r\n      If k is positive, the Weibull distribution with shape parameter k\r\n      If k is zero, the Gumbel distribution\r\n      If k is negative, the Fréchet distribution with shape parameter −k\r\n      \r\n      In all three cases, a is the location parameter and b is the scale parameter.`,\r\n    GENERATOR: d3.randomWeibull,\r\n  },\r\n  [DISTRIBUTIONS.CAUCHY]: {\r\n    PARAMETERS: [\"a\", \"b\"],\r\n    DESCRIPTION: `Cauchy distribution. a and b have the same meanings as in Weibull.`,\r\n    GENERATOR: d3.randomCauchy,\r\n  },\r\n  [DISTRIBUTIONS.LOGISTIC]: {\r\n    PARAMETERS: [\"a\", \"b\"],\r\n    DESCRIPTION: `Logistic distribution. a and b have the same meanings and default values as in d3.randomWeibull.`,\r\n    GENERATOR: d3.randomLogistic,\r\n  },\r\n  [DISTRIBUTIONS.POISSON]: {\r\n    PARAMETERS: [\"lambda\"],\r\n    DESCRIPTION: `Poisson distribution with mean lambda.`,\r\n    GENERATOR: d3.randomPoisson,\r\n  },\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { DISTRIBUTIONS, PARAMETERS_CONFIG } from \"./config\";\r\n\r\nexport const RandomNumberGenerator = (props) => {\r\n  const { valuesRef } = props;\r\n  const [roundValues, setRoundValues] = useState(false);\r\n  const [distribution, setDistribution] = useState(DISTRIBUTIONS.UNIFORM);\r\n  const lenghtRef = useRef();\r\n  const parameterRef = useRef([]);\r\n\r\n  const generateInput = () => {\r\n    const length = Number(lenghtRef.current.value);\r\n    const parameters = parameterRef.current.map((el) =>\r\n      el ? Number(el.value) : undefined\r\n    );\r\n    console.log(parameters);\r\n    const randomGenerator = PARAMETERS_CONFIG[distribution].GENERATOR(\r\n      ...parameters\r\n    );\r\n    const array = [];\r\n    for (let i = 0; i < length; i++) {\r\n      const random = randomGenerator();\r\n      const randomRounded = Math.round(random);\r\n      array.push(roundValues ? randomRounded : random);\r\n    }\r\n    const input = array.reduce(\r\n      (curr, next, i) => curr + (i === 0 ? \"\" : \",\") + next,\r\n      \"\"\r\n    );\r\n    valuesRef.current.value = input;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form.Group>\r\n        <Form.Label>Length</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter value\" ref={lenghtRef} />\r\n        <Form.Label>Distribution</Form.Label>\r\n        <Form.Control\r\n          as=\"select\"\r\n          onChange={(event) => setDistribution(event.target.value)}\r\n        >\r\n          {Object.entries(PARAMETERS_CONFIG).map(([key, value]) => (\r\n            <option>{key}</option>\r\n          ))}\r\n        </Form.Control>\r\n        <Form.Text className=\"text-muted\">\r\n          {PARAMETERS_CONFIG[distribution].DESCRIPTION}\r\n        </Form.Text>\r\n        {PARAMETERS_CONFIG[distribution].PARAMETERS.map((parameter, i) => (\r\n          <>\r\n            <Form.Label>{parameter}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={parameter}\r\n              ref={(el) => (parameterRef.current[i] = el)}\r\n            />\r\n          </>\r\n        ))}\r\n        <Form.Check\r\n          type=\"checkbox\"\r\n          label=\"Round values?\"\r\n          value={roundValues}\r\n          onChange={() => setRoundValues(!roundValues)}\r\n        />\r\n        <Button onClick={generateInput} className=\"mt-3\">\r\n          Generate\r\n        </Button>\r\n      </Form.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RandomNumberGenerator;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport * as d3 from \"d3\";\r\nimport \"d3-random\";\r\nimport { nest } from \"d3-collection\";\r\n\r\nimport Experiments from \"./Experiments\";\r\nimport RandomNumberGenerator from \"./RandomNumberGenerator\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nconst BoardUser = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [experiments, setExperiments] = useState([]);\r\n  const [checkedExperimentsDict, setCheckedExperimentsDict] = useState({});\r\n  const [selectedResult, setSelectedResult] = useState(null);\r\n\r\n  const valuesRef = useRef();\r\n  const rRef = useRef();\r\n  const repetitionsRef = useRef();\r\n  const algoRef = useRef();\r\n  const chartContainerRef = useRef();\r\n\r\n  const refreshExperiments = () => {\r\n    setLoading(true);\r\n    UserService.getUserExperiments()\r\n      .then((response) => {\r\n        setExperiments(response.data.experiments);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSelectAllExperiments = (algo) => {\r\n    const newCheckedDict = experiments\r\n      .filter((experiment) => experiment.algo === algo)\r\n      .reduce((acc, current) => {\r\n        return { ...acc, [current.id]: true };\r\n      }, {});\r\n    setCheckedExperimentsDict({ ...checkedExperimentsDict, ...newCheckedDict });\r\n  };\r\n\r\n  const handleDeselectAllExperiments = (algo) => {\r\n    const newCheckedDict = experiments\r\n      .filter((experiment) => experiment.algo === algo)\r\n      .reduce((acc, current) => {\r\n        return { ...acc, [current.id]: false };\r\n      }, {});\r\n    setCheckedExperimentsDict({ ...checkedExperimentsDict, ...newCheckedDict });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshExperiments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const newExperimentsCheckedDict = experiments.reduce((acc, current) => {\r\n      return { ...acc, [current.id]: false };\r\n    }, {});\r\n    Object.entries(checkedExperimentsDict).forEach(([key, value]) => {\r\n      if (newExperimentsCheckedDict.hasOwnProperty(key)) {\r\n        newExperimentsCheckedDict[key] = value;\r\n      }\r\n    });\r\n    setCheckedExperimentsDict(newExperimentsCheckedDict);\r\n  }, [experiments]);\r\n\r\n  useEffect(() => {\r\n    d3.select(chartContainerRef.current).selectAll(\"svg.length\").remove();\r\n    const data = Object.entries(checkedExperimentsDict).reduce(\r\n      (acc, [key, value]) => {\r\n        const findResult = experiments.find((result) => {\r\n          return result.id === Number(key);\r\n        });\r\n\r\n        if (value) {\r\n          const algo = findResult.algo;\r\n          const r = findResult.r;\r\n          const computationTime = findResult.avgComputationTime;\r\n          const setValues = findResult.setValues;\r\n          return [\r\n            ...acc,\r\n            { ...findResult, algo, r, computationTime, setValues },\r\n          ];\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    if (data.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const margin = { top: 60, right: 100, bottom: 40, left: 100 },\r\n      width = 1000 - margin.left - margin.right,\r\n      height = 600 - margin.top - margin.bottom;\r\n\r\n    const svg = d3\r\n      .select(chartContainerRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"length\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"input size/computation time\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -20)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // y label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"input size\")\r\n      .attr(\"transform\", `translate(-40, ${height / 2}), rotate(270)`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // x label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"computation time [s]\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height + 35})`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    const sumstat = nest()\r\n      .key((d) => d.algo)\r\n      .sortValues((a, b) => (a.computationTime > b.computationTime ? 1 : -1))\r\n      .entries(data);\r\n\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => Math.max(...d.computationTimes))])\r\n      .range([0, width]);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.setValues.length)])\r\n      .range([height, 0]);\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    const res = sumstat.map(function (d) {\r\n      return d.key;\r\n    }); // list of group names\r\n    const color = d3\r\n      .scaleOrdinal()\r\n      .domain(res)\r\n      .range([\r\n        \"#e41a1c\",\r\n        \"#377eb8\",\r\n        \"#4daf4a\",\r\n        \"#984ea3\",\r\n        \"#ff7f00\",\r\n        \"#ffff33\",\r\n        \"#a65628\",\r\n        \"#f781bf\",\r\n        \"#999999\",\r\n      ]);\r\n\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data(sumstat)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", function (d) {\r\n        return color(d.key);\r\n      })\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\"d\", function (d) {\r\n        return (\r\n          d3\r\n            .line()\r\n            // .curve(d3.curveCatmullRom)\r\n            .x(function (d) {\r\n              return x(d.computationTime);\r\n            })\r\n            .y(function (d) {\r\n              return y(d.setValues.length);\r\n            })(d.values)\r\n        );\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"dot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 4)\r\n      .attr(\"cx\", function (d) {\r\n        return x(d.computationTime);\r\n      })\r\n      .attr(\"cy\", function (d) {\r\n        return y(d.setValues.length);\r\n      })\r\n      .on(\"click\", (e, d) => {\r\n        setSelectedResult(d);\r\n      });\r\n\r\n    res.forEach((res, i) => {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width + 20) // space legend\r\n        .attr(\"y\", margin.top + 20 + i * 20)\r\n        .attr(\"class\", \"legend\") // style the legend\r\n        .style(\"fill\", function () {\r\n          // Add the colours dynamically\r\n          return color(res);\r\n        })\r\n\r\n        .text(res);\r\n    });\r\n\r\n    //Draw boxplot\r\n    const boxplotGroups = svg\r\n      .selectAll(\"g.boxplot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"boxplot\");\r\n\r\n    boxplotGroups.each((d, i, g) => {\r\n      const boxplotGroup = d3.select(g[i]);\r\n      const sortedComputationTimes = d.computationTimes.sort(d3.ascending);\r\n      const q1 = d3.quantile(sortedComputationTimes, 0.25);\r\n      const median = d3.quantile(sortedComputationTimes, 0.5);\r\n      const q3 = d3.quantile(sortedComputationTimes, 0.75);\r\n      const IQR = q3 - q1;\r\n      const min = q1 - 1.5 * IQR;\r\n      const max = q3 + 1.5 * IQR;\r\n\r\n      //Main line\r\n      boxplotGroup\r\n        .append(\"line\")\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"x1\", x(min))\r\n        .attr(\"x2\", x(max))\r\n        .attr(\"y1\", y(d.setValues.length))\r\n        .attr(\"y2\", y(d.setValues.length));\r\n\r\n      //Box\r\n      const boxplotHeight = 20;\r\n      boxplotGroup\r\n        .append(\"rect\")\r\n        .attr(\"x\", x(q1))\r\n        .attr(\"y\", y(d.setValues.length) - boxplotHeight / 2)\r\n        .attr(\"height\", boxplotHeight)\r\n        .attr(\"width\", x(q3) - x(q1))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"#69b3a2\");\r\n\r\n      //Lines\r\n      boxplotGroup\r\n        .selectAll(\"line.indicator\")\r\n        .data([min, median, max])\r\n        .enter()\r\n        .append(\"line\")\r\n        .attr(\"class\", \"indicator\")\r\n        .attr(\"x1\", (dd) => x(dd))\r\n        .attr(\"x2\", (dd) => x(dd))\r\n        .attr(\"y1\", y(d.setValues.length) - boxplotHeight / 2)\r\n        .attr(\"y2\", y(d.setValues.length) + boxplotHeight / 2)\r\n        .attr(\"stroke\", \"black\");\r\n\r\n      //Individual points\r\n      boxplotGroup\r\n        .selectAll(\"dot\")\r\n        .data(sortedComputationTimes)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"r\", 3)\r\n        .attr(\"cx\", (dd) => x(dd))\r\n        .attr(\"cy\", y(d.setValues.length))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"white\");\r\n    });\r\n  }, [checkedExperimentsDict]);\r\n\r\n  useEffect(() => {\r\n    d3.select(chartContainerRef.current).selectAll(\"svg.r\").remove();\r\n    const data = Object.entries(checkedExperimentsDict).reduce(\r\n      (acc, [key, value]) => {\r\n        const findResult = experiments.find((result) => {\r\n          return result.id === Number(key);\r\n        });\r\n\r\n        if (value) {\r\n          const algo = findResult.algo;\r\n          const r = findResult.r;\r\n          const computationTime = findResult.avgComputationTime;\r\n          const setValues = findResult.setValues;\r\n          return [\r\n            ...acc,\r\n            { ...findResult, algo, r, computationTime, setValues },\r\n          ];\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    if (data.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const margin = { top: 60, right: 100, bottom: 40, left: 100 },\r\n      width = 1000 - margin.left - margin.right,\r\n      height = 600 - margin.top - margin.bottom;\r\n\r\n    const svg = d3\r\n      .select(chartContainerRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"r\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"r/computation time\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -20)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // y label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"r\")\r\n      .attr(\"transform\", `translate(-40, ${height / 2}), rotate(270)`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // x label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"computation time [s]\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height + 35})`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    const sumstat = nest()\r\n      .key((d) => d.algo)\r\n      .sortValues((a, b) => (a.computationTime > b.computationTime ? 1 : -1))\r\n      .entries(data);\r\n\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => Math.max(...d.computationTimes))])\r\n      .range([0, width]);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.r)])\r\n      .range([height, 0]);\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    const res = sumstat.map(function (d) {\r\n      return d.key;\r\n    }); // list of group names\r\n    const color = d3\r\n      .scaleOrdinal()\r\n      .domain(res)\r\n      .range([\r\n        \"#e41a1c\",\r\n        \"#377eb8\",\r\n        \"#4daf4a\",\r\n        \"#984ea3\",\r\n        \"#ff7f00\",\r\n        \"#ffff33\",\r\n        \"#a65628\",\r\n        \"#f781bf\",\r\n        \"#999999\",\r\n      ]);\r\n\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data(sumstat)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", function (d) {\r\n        return color(d.key);\r\n      })\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\"d\", function (d) {\r\n        return (\r\n          d3\r\n            .line()\r\n            // .curve(d3.curveCatmullRom)\r\n            .x(function (d) {\r\n              return x(d.computationTime);\r\n            })\r\n            .y(function (d) {\r\n              return y(d.r);\r\n            })(d.values)\r\n        );\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"dot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 4)\r\n      .attr(\"cx\", function (d) {\r\n        return x(d.computationTime);\r\n      })\r\n      .attr(\"cy\", function (d) {\r\n        return y(d.r);\r\n      })\r\n      .on(\"click\", (e, d) => {\r\n        setSelectedResult(d);\r\n      });\r\n\r\n    res.forEach((res, i) => {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width + 20) // space legend\r\n        .attr(\"y\", margin.top + 20 + i * 20)\r\n        .attr(\"class\", \"legend\") // style the legend\r\n        .style(\"fill\", function () {\r\n          // Add the colours dynamically\r\n          return color(res);\r\n        })\r\n\r\n        .text(res);\r\n    });\r\n\r\n    //Draw boxplot\r\n    const boxplotGroups = svg\r\n      .selectAll(\"g.boxplot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"boxplot\");\r\n\r\n    boxplotGroups.each((d, i, g) => {\r\n      const boxplotGroup = d3.select(g[i]);\r\n      const sortedComputationTimes = d.computationTimes.sort(d3.ascending);\r\n      const q1 = d3.quantile(sortedComputationTimes, 0.25);\r\n      const median = d3.quantile(sortedComputationTimes, 0.5);\r\n      const q3 = d3.quantile(sortedComputationTimes, 0.75);\r\n      const IQR = q3 - q1;\r\n      const min = q1 - 1.5 * IQR;\r\n      const max = q3 + 1.5 * IQR;\r\n\r\n      //Main line\r\n      boxplotGroup\r\n        .append(\"line\")\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"x1\", x(min))\r\n        .attr(\"x2\", x(max))\r\n        .attr(\"y1\", y(d.r))\r\n        .attr(\"y2\", y(d.r));\r\n\r\n      //Box\r\n      const boxplotHeight = 20;\r\n      boxplotGroup\r\n        .append(\"rect\")\r\n        .attr(\"x\", x(q1))\r\n        .attr(\"y\", y(d.r) - boxplotHeight / 2)\r\n        .attr(\"height\", boxplotHeight)\r\n        .attr(\"width\", x(q3) - x(q1))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"#69b3a2\");\r\n\r\n      //Lines\r\n      boxplotGroup\r\n        .selectAll(\"line.indicator\")\r\n        .data([min, median, max])\r\n        .enter()\r\n        .append(\"line\")\r\n        .attr(\"class\", \"indicator\")\r\n        .attr(\"x1\", (dd) => x(dd))\r\n        .attr(\"x2\", (dd) => x(dd))\r\n        .attr(\"y1\", y(d.r) - boxplotHeight / 2)\r\n        .attr(\"y2\", y(d.r) + boxplotHeight / 2)\r\n        .attr(\"stroke\", \"black\");\r\n\r\n      //Individual points\r\n      boxplotGroup\r\n        .selectAll(\"dot\")\r\n        .data(sortedComputationTimes)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"r\", 3)\r\n        .attr(\"cx\", (dd) => x(dd))\r\n        .attr(\"cy\", y(d.r))\r\n        .attr(\"stroke\", \"black\")\r\n        .attr(\"fill\", \"white\");\r\n    });\r\n  }, [checkedExperimentsDict]);\r\n\r\n  useEffect(() => {\r\n    d3.select(chartContainerRef.current).selectAll(\"svg.distlength\").remove();\r\n    const data = Object.entries(checkedExperimentsDict).reduce(\r\n      (acc, [key, value]) => {\r\n        const findResult = experiments.find((result) => {\r\n          return result.id === Number(key);\r\n        });\r\n\r\n        if (value) {\r\n          const algo = findResult.algo;\r\n          const r = findResult.r;\r\n          const computationTime = findResult.minDistance;\r\n          const setValues = findResult.setValues;\r\n          return [\r\n            ...acc,\r\n            { ...findResult, algo, r, computationTime, setValues },\r\n          ];\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    if (data.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const margin = { top: 60, right: 100, bottom: 40, left: 100 },\r\n      width = 1000 - margin.left - margin.right,\r\n      height = 600 - margin.top - margin.bottom;\r\n\r\n    const svg = d3\r\n      .select(chartContainerRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"length\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"distance/input size\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -20)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // y label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"distance\")\r\n      .attr(\"transform\", `translate(-40, ${height / 2}), rotate(270)`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // x label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"input size\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height + 35})`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    const sumstat = nest()\r\n      .key((d) => d.algo)\r\n      .sortValues((a, b) => (a.setValues.length > b.setValues.length ? 1 : -1))\r\n      .entries(data);\r\n\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.setValues.length)])\r\n      .range([0, width]);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.minDistance)])\r\n      .range([height, 0]);\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    const res = sumstat.map(function (d) {\r\n      return d.key;\r\n    }); // list of group names\r\n    const color = d3\r\n      .scaleOrdinal()\r\n      .domain(res)\r\n      .range([\r\n        \"#e41a1c\",\r\n        \"#377eb8\",\r\n        \"#4daf4a\",\r\n        \"#984ea3\",\r\n        \"#ff7f00\",\r\n        \"#ffff33\",\r\n        \"#a65628\",\r\n        \"#f781bf\",\r\n        \"#999999\",\r\n      ]);\r\n\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data(sumstat)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", function (d) {\r\n        return color(d.key);\r\n      })\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\"d\", function (d) {\r\n        return (\r\n          d3\r\n            .line()\r\n            // .curve(d3.curveCatmullRom)\r\n            .x(function (d) {\r\n              return x(d.setValues.length);\r\n            })\r\n            .y(function (d) {\r\n              return y(d.minDistance);\r\n            })(d.values)\r\n        );\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"dot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 4)\r\n      .attr(\"cx\", function (d) {\r\n        return x(d.setValues.length);\r\n      })\r\n      .attr(\"cy\", function (d) {\r\n        return y(d.minDistance);\r\n      })\r\n      .on(\"click\", (e, d) => {\r\n        setSelectedResult(d);\r\n      });\r\n\r\n    res.forEach((res, i) => {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width + 20) // space legend\r\n        .attr(\"y\", margin.top + 20 + i * 20)\r\n        .attr(\"class\", \"legend\") // style the legend\r\n        .style(\"fill\", function () {\r\n          // Add the colours dynamically\r\n          return color(res);\r\n        })\r\n\r\n        .text(res);\r\n    });\r\n  }, [checkedExperimentsDict]);\r\n\r\n  useEffect(() => {\r\n    d3.select(chartContainerRef.current).selectAll(\"svg.distr\").remove();\r\n    const data = Object.entries(checkedExperimentsDict).reduce(\r\n      (acc, [key, value]) => {\r\n        const findResult = experiments.find((result) => {\r\n          return result.id === Number(key);\r\n        });\r\n\r\n        if (value) {\r\n          const algo = findResult.algo;\r\n          const r = findResult.r;\r\n          const computationTime = findResult.minDistance;\r\n          const setValues = findResult.setValues;\r\n          return [\r\n            ...acc,\r\n            { ...findResult, algo, r, computationTime, setValues },\r\n          ];\r\n        }\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    if (data.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const margin = { top: 60, right: 100, bottom: 40, left: 100 },\r\n      width = 1000 - margin.left - margin.right,\r\n      height = 600 - margin.top - margin.bottom;\r\n\r\n    const svg = d3\r\n      .select(chartContainerRef.current)\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"length\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"distance/r\")\r\n      .attr(\"x\", width / 2)\r\n      .attr(\"y\", -20)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // y label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"distance\")\r\n      .attr(\"transform\", `translate(-40, ${height / 2}), rotate(270)`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    // x label\r\n    svg\r\n      .append(\"text\")\r\n      .text(\"r\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height + 35})`)\r\n      .attr(\"text-anchor\", \"middle\");\r\n\r\n    const sumstat = nest()\r\n      .key((d) => d.algo)\r\n      .sortValues((a, b) => (a.r > b.r ? 1 : -1))\r\n      .entries(data);\r\n\r\n    const x = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.r)])\r\n      .range([0, width]);\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n    const y = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.minDistance)])\r\n      .range([height, 0]);\r\n    svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n    const res = sumstat.map(function (d) {\r\n      return d.key;\r\n    }); // list of group names\r\n    const color = d3\r\n      .scaleOrdinal()\r\n      .domain(res)\r\n      .range([\r\n        \"#e41a1c\",\r\n        \"#377eb8\",\r\n        \"#4daf4a\",\r\n        \"#984ea3\",\r\n        \"#ff7f00\",\r\n        \"#ffff33\",\r\n        \"#a65628\",\r\n        \"#f781bf\",\r\n        \"#999999\",\r\n      ]);\r\n\r\n    svg\r\n      .selectAll(\".line\")\r\n      .data(sumstat)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", function (d) {\r\n        return color(d.key);\r\n      })\r\n      .attr(\"stroke-width\", 1.5)\r\n      .attr(\"d\", function (d) {\r\n        return (\r\n          d3\r\n            .line()\r\n            // .curve(d3.curveCatmullRom)\r\n            .x(function (d) {\r\n              return x(d.r);\r\n            })\r\n            .y(function (d) {\r\n              return y(d.minDistance);\r\n            })(d.values)\r\n        );\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"dot\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"r\", 4)\r\n      .attr(\"cx\", function (d) {\r\n        return x(d.r);\r\n      })\r\n      .attr(\"cy\", function (d) {\r\n        return y(d.minDistance);\r\n      })\r\n      .on(\"click\", (e, d) => {\r\n        setSelectedResult(d);\r\n      });\r\n\r\n    res.forEach((res, i) => {\r\n      svg\r\n        .append(\"text\")\r\n        .attr(\"x\", width + 20) // space legend\r\n        .attr(\"y\", margin.top + 20 + i * 20)\r\n        .attr(\"class\", \"legend\") // style the legend\r\n        .style(\"fill\", function () {\r\n          // Add the colours dynamically\r\n          return color(res);\r\n        })\r\n\r\n        .text(res);\r\n    });\r\n  }, [checkedExperimentsDict]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>Experiments</h3>\r\n        <Form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const list = valuesRef.current.value\r\n              .split(\",\")\r\n              .map((value) => Number(value));\r\n            const r = Number(rRef.current.value);\r\n            const repetitions = repetitionsRef.current.value;\r\n\r\n            if (algoRef.current.value === \"Bruteforce\") {\r\n              UserService.addBruteforceTask(list, r, repetitions);\r\n            } else if (algoRef.current.value === \"Karmarkar-Karp\") {\r\n              UserService.addKKTask(list, r, repetitions);\r\n            }\r\n          }}\r\n        >\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Values</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter values\"\r\n              ref={valuesRef}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              Each value should be separated by a coma.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <RandomNumberGenerator valuesRef={valuesRef} />\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Number of partitions (R)</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Number of partitions\"\r\n              ref={rRef}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicSelect\">\r\n            <Form.Label>Algorithm</Form.Label>\r\n            <Form.Control as=\"select\" custom ref={algoRef}>\r\n              <option>Bruteforce</option>\r\n              <option>Karmarkar-Karp</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicRepetitions\">\r\n            <Form.Label>Number of repetitions</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Number of repetitons\"\r\n              ref={repetitionsRef}\r\n            />\r\n          </Form.Group>\r\n          <Alert variant=\"danger\">\r\n            Do not run Bruteforce with input size > 18. This app is hosted on a\r\n            free service plan and it might permanently stop it.\r\n          </Alert>\r\n          <Button variant=\"success\" type=\"submit\">\r\n            Add task\r\n          </Button>\r\n        </Form>\r\n      </header>\r\n      {selectedResult && (\r\n        <div>\r\n          Algorithm: {selectedResult.algo}\r\n          <br />\r\n          Values: {JSON.stringify(selectedResult.setValues)}\r\n          <br />\r\n          R: {JSON.stringify(selectedResult.r)}\r\n          <br />\r\n          Computation time: {selectedResult.computationTime}s\r\n        </div>\r\n      )}\r\n      <Container fluid>\r\n        <div ref={chartContainerRef}></div>\r\n      </Container>\r\n      <Container className=\"my-2\">\r\n        <Button\r\n          variant=\"primary\"\r\n          disabled={loading}\r\n          onClick={refreshExperiments}\r\n        >\r\n          {loading && (\r\n            <Spinner\r\n              as=\"span\"\r\n              animation=\"border\"\r\n              size=\"sm\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          )}\r\n          {loading ? \"\" : \"Refresh experiments\"}\r\n        </Button>\r\n        <Row>\r\n          <Col>\r\n            <p>Bruteforce</p>\r\n            <Experiments\r\n              experiments={experiments.filter(\r\n                (experiment) => experiment.algo === \"bruteforce\"\r\n              )}\r\n              checkedDict={checkedExperimentsDict}\r\n              setCheckedDict={setCheckedExperimentsDict}\r\n              handleSelectAll={() => handleSelectAllExperiments(\"bruteforce\")}\r\n              handleDeselectAll={() =>\r\n                handleDeselectAllExperiments(\"bruteforce\")\r\n              }\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <p>KK</p>\r\n            <Experiments\r\n              experiments={experiments.filter(\r\n                (experiment) => experiment.algo === \"kk\"\r\n              )}\r\n              checkedDict={checkedExperimentsDict}\r\n              setCheckedDict={setCheckedExperimentsDict}\r\n              handleSelectAll={() => handleSelectAllExperiments(\"kk\")}\r\n              handleDeselectAll={() => handleDeselectAllExperiments(\"kk\")}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardUser;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport Board from \"./components/Board\";\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setCurrentUser(user);\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          Partition Problem\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/user\"} className=\"nav-link\">\n                Experiment board\n              </Link>\n            </li>\n          )}\n        </div>\n\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                LogOut\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Login\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => <Login setCurrentUser={setCurrentUser} />}\n          />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/profile\" component={Profile} />\n          <Route path=\"/user\" component={Board} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}